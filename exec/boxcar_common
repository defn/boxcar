#!/usr/bin/env bash

PATH="$PATH:$(unset CDPATH; cd -P -- "$(dirname -- "${BASH_SOURCE}")/.." && pwd -P)/exec"

function until_port_open {
  local address="$1"; shift
  local port="$1"; shift

  echo info "until $address:$port"

  while true; do
    if nc -z "$address" "$port"; then
      echo
      break
    fi
    echo -n "."
    sleep 5
  done
}

function demo_in_vagrant {
  local pth_custom="${@:$(($#))}"

  local tmp_ssh_config="$(mktemp -t XXXXXXXXX)"
  (cd $FLAGS_release_dir && vagrant ssh-config | sed -n '/^Host/,$p' | perl -ne 'unless (m{IdentitiesOnly} && $last !~ m{IdentityFile}) { print }; $last = $_' > "$tmp_ssh_config")
  $pth_custom "$tmp_ssh_config" "${@:1:$(($#-1))}"
  rm -f "$tmp_ssh_config"
}

function build_vagrant {
  mkdir -p $FLAGS_release_dir

  local nm_keypair="$(build_keypair)"
  rm -rf "$FLAGS_release_dir/.vagrant"
  demo_vagrant "$nm_keypair" "$FLAGS_boxname" "$@"
  early_termination

  if [[ "$OVERRIDE_fast" = "$FLAGS_TRUE" ]]; then
    (cd $FLAGS_release_dir && vagrant destroy -f)
  else
    bundle_vagrant
  fi

  delete_keypair "$nm_keypair"
}

function configure_remote_bootstrap {
  local pth_bootstrap="$1"; shift
  rsync -ia -e "ssh -F '$pth_ssh_config'" "$pth_bootstrap" default:.boxcar/
}

function start_image_hook {
  local pth_hook="$shome/libexec/boxcar-run"

  if [[ "$#" = 0 ]]; then
    echo info NOT FOUND
    echo fatal "missing build boxcar script arg"
    exit 1
  fi

  exec boxcar "$FLAGS_provider" "$@" "$pth_hook"
}

function continue_image_hook {
  local pth_ssh_config="$1"; shift

  if [[ "$#" = 0 ]]; then
    return 0
  fi

  echo info "continuining with $@"
  local raw_hook="$1"; shift
  local nm_hook="${raw_hook%%:*}"
  local pth_hook="$(type -P boxcar-${nm_hook} 2>&- || true)"

  if [[ ! -x "$pth_hook" ]]; then
    echo info NOT FOUND
    echo fatal "could not find boxcar script for $nm_hook"
    return 1
  fi

  exec $pth_hook "$pth_ssh_config" "$@"
}

function custom_hook {
  local pth_bootstrap="$1"; shift
  local pth_ssh_config="$1"; shift
  local root_loader="$1"; shift
  local nm_bootstrap="$(basename "$pth_bootstrap")"

  configure_remote_bootstrap "$pth_bootstrap"

  echo info "$nm_bootstrap"

  echo info "starting $nm_bootstrap"
  local failed=0

  ssh -F "$pth_ssh_config" -A default "exec ${root_loader:+${root_loader} }env .boxcar/$nm_bootstrap" || failed="$?"
  if [[ "$failed" = 0 ]]; then
    echo info "success! $nm_bootstrap"
    ssh -F "$pth_ssh_config" default env LANG=C rm -vfr ./.boxcar
  else
    echo info "exit code: $failed"
    echo fatal "failed! $nm_bootstrap"
  fi

  return $failed
}

function standard_hook {
  local pth_bootstrap="$1"; shift
  local pth_ssh_config="$1"; shift

  custom_hook "$pth_bootstrap" "$pth_ssh_config" "${LOADER:-}" "$@"
  continue_image_hook "$pth_ssh_config" "$@"
}

function standard_root_hook {
  LOADER="sudo -E" standard_hook "$@"
}

